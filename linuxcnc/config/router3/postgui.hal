# Place any HAL commands in this file that you want to run AFTER the GUI finishes loading.
# GUI HAL pins are not visible until after the GUI loads.
# This file will not be written over by the configuration tool.


#
# Program Inputs (commands)
#

net program-idle									<= halui.program.is-idle
net program-open-collet								<= motion.digital-out-02		# m64/m65 p2
net program-purge-air								<= motion.digital-out-03		# m64/m65 p3

net spindle-collet-open-in							=> motion.digital-in-00			# m66 p0
net spindle-collet-locked-in						=> motion.digital-in-01			# m66 p1

#	Invert the halui e-stop, and feed that to
#	the servo enable pinsâ€¦

net estop-active									<= halui.estop.is-activated
net estop-active									=> notEstop.in
net estop-active-not								<= notEstop.out

net estop-active-not								=> servo-enable-x
net estop-active-not								=> servo-enable-y1
net estop-active-not								=> servo-enable-y2
net estop-active-not								=> servo-enable-z
net estop-active-not								=> servo-enable-a

#	The Z-axis brake is disengaged when energized, so
#	disengage it when the z-axis servo fault output resets.
#	This keeps the brake from letting go of the z-axis until
#	the servo is able to hold up the mass of the spindle. We
#	don't seem to need a delay here; the HLFB output accurately
#	reflects the servo's ability to hold position. This does,
#	however, depend on the Teknic SDSK HLFB output being properly
#	configured.

net axis-fault-z									=> notZFault.in
net servo-ok-z										<= notZFault.out
net servo-ok-z										=> brake-disengage-z



net spindle-speed-scale								=> gladevcp.spindle-speed-text gladevcp.spindle-speed-bar
